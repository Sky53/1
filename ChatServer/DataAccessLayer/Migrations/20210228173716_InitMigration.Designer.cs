// <auto-generated />
using System;
using ChatServer.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ChatServer.DataAccessLayer.Migrations
{
    [DbContext(typeof(ChatContext))]
    [Migration("20210228173716_InitMigration")]
    partial class InitMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ChatServer.DataAccessLayer.Model.BaseMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("BaseMessages");
                });

            modelBuilder.Entity("ChatServer.DataAccessLayer.Model.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "group1"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "group2"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "group3"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "group4"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "group5"
                        });
                });

            modelBuilder.Entity("ChatServer.DataAccessLayer.Model.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Pass")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "User1",
                            Pass = "pass"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "User2",
                            Pass = "pass"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "User3",
                            Pass = "pass"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "User4",
                            Pass = "pass"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "User5",
                            Pass = "pass"
                        });
                });

            modelBuilder.Entity("GroupUser", b =>
                {
                    b.Property<long>("GroupsId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("GroupsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("GroupUser");

                    b.HasData(
                        new
                        {
                            GroupsId = 1L,
                            UsersId = 1L
                        },
                        new
                        {
                            GroupsId = 2L,
                            UsersId = 2L
                        },
                        new
                        {
                            GroupsId = 3L,
                            UsersId = 3L
                        },
                        new
                        {
                            GroupsId = 4L,
                            UsersId = 4L
                        },
                        new
                        {
                            GroupsId = 5L,
                            UsersId = 5L
                        });
                });

            modelBuilder.Entity("ChatServer.DataAccessLayer.Model.BaseMessage", b =>
                {
                    b.HasOne("ChatServer.DataAccessLayer.Model.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("ChatServer.DataAccessLayer.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GroupUser", b =>
                {
                    b.HasOne("ChatServer.DataAccessLayer.Model.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatServer.DataAccessLayer.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
